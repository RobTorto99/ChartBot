{
    "visualization_prompt": "Generate a line chart showing monthly temperature trends for two cities using interactive annotation controls with dynamic styling",
    "visualization_code": "{\n    chart: {\n        events: {\n            load: function () {\n                const chart = this;\n                document.querySelectorAll('.highcharts-popup-annotations button')[0].addEventListener('click', function () {\n                    const color = document.querySelectorAll('.highcharts-popup-annotations input[name=\"stroke\"]')[0].value;\n                    chart.currentAnnotation.update({ shapes: [{ fill: color }] });\n                    chart.annotationsPopupContainer.style.display = 'none';\n                });\n            }\n        }\n    },\n    navigation: {\n        bindingsClassName: 'custom-gui-container',\n        events: {\n            showPopup: function (event) {\n                const chart = this.chart;\n                if (!chart.annotationsPopupContainer) {\n                    chart.annotationsPopupContainer = document.getElementsByClassName('highcharts-popup-annotations')[0];\n                }\n                if (event.formType === 'annotation-toolbar' && !chart.activeButton) {\n                    chart.currentAnnotation = event.annotation;\n                    chart.annotationsPopupContainer.style.display = 'block';\n                }\n            },\n            closePopup: function () {\n                this.chart.annotationsPopupContainer.style.display = 'none';\n                this.chart.currentAnnotation = null;\n            },\n            selectButton: function (event) {\n                event.button.classList.add('active');\n                this.chart.activeButton = event.button;\n            },\n            deselectButton: function (event) {\n                event.button.classList.remove('active');\n                this.chart.activeButton = null;\n            }\n        }\n    },\n    xAxis: {\n        categories: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n    },\n    yAxis: {\n        title: { text: 'Temperature (\u00b0C)' }\n    },\n    series: [{\n        name: 'Reggane',\n        data: [16.0,18.2,23.1,27.9,32.2,36.4,39.8,38.4,35.5,29.2,22.0,17.8]\n    }, {\n        name: 'Tallinn',\n        data: [-2.9,-3.6,-0.6,4.8,10.2,14.5,17.6,16.5,12.0,6.5,2.0,-0.9]\n    }]\n}",
    "visualization_explanation": "The dataset contains two time series (n=12 monthly observations) comparing temperature patterns between Reggane (hot desert climate) and Tallinn (temperate climate). Synthetic data maintains domain validity with Reggane's values (\u03bc=28.0\u00b0C, \u03c3=8.5) reflecting Saharan extremes and Tallinn's data (\u03bc=6.3\u00b0C, \u03c3=8.1) matching Baltic seasonal ranges. The line chart optimizes data-ink ratio by eliminating redundant gridlines while preserving temporal continuity. Cairo's principles are applied through discriminable hue contrast (default series colors) and direct label encoding. Annotations follow Tufte's minimalism with unobtrusive interactive controls. Statistical fidelity is achieved through realistic annual temperature progression and hemispheric seasonality mirroring real meteorological patterns."
}