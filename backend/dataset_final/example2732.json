{
    "visualization_prompt": "Generate a dashboard with 5 DataGrids showing different JSON data structures using Highcharts Dashboards layout management",
    "visualization_code": {
        "HTML": "<div id='container'></div>",
        "CSS": "@import url('https://code.highcharts.com/css/highcharts.css');\n@import url('https://code.highcharts.com/dashboards/css/datagrid.css');\n@import url('https://code.highcharts.com/dashboards/css/dashboards.css');",
        "JavaScript": "Dashboards.board('container', {\n  dataPool: {\n    connectors: [\n      {\n        id: 'health-data',\n        type: 'JSON',\n        options: {\n          data: [\n            { name: 'Emma', age: 28, weight: 62 },\n            { name: 'Liam', age: 35, weight: 85 },\n            { name: 'Olivia', age: 31, weight: 58 },\n            { name: 'Noah', age: 29, weight: 76 }\n          ]\n        }\n      },\n      {\n        id: 'financial-series',\n        type: 'JSON',\n        options: {\n          orientation: 'columns',\n          beforeParse: data => {\n            return data[0].series.map(s => [s.name, ...s.data.map(v => v + (Math.random()*10))]);\n          },\n          data: [{\n            series: [\n              { name: 'Revenue', data: [45,67,83,92,105] },\n              { name: 'Expenses', data: [32,48,51,67,73] },\n              { name: 'Profit', data: [13,19,32,25,32] }\n            ]\n          }]\n        }\n      },\n      {\n        id: 'sensor-readings',\n        type: 'JSON',\n        options: {\n          firstRowAsNames: false,\n          columnNames: ['Sensor ID', 'Temp (\u00b0C)', 'Humidity (%)'],\n          data: [\n            [101, 23.4, 45],\n            [102, 24.1, 48],\n            [103, 22.9, 43]\n          ]\n        }\n      },\n      {\n        id: 'row-oriented',\n        type: 'JSON',\n        options: {\n          data: [\n            ['Q1', 'Q2', 'Q3', 'Q4'],\n            [120, 135, 148, 160],\n            [95, 110, 123, 140]\n          ]\n        }\n      },\n      {\n        id: 'column-oriented',\n        type: 'JSON',\n        options: {\n          orientation: 'columns',\n          data: [\n            ['Region', 'North', 'South', 'East', 'West'],\n            ['Sales', 245, 189, 302, 178],\n            ['Target', 280, 200, 320, 200]\n          ]\n        }\n      }\n    ]\n  },\n  components: [\n    { type: 'DataGrid', renderTo: 'grid1', connector: { id: 'health-data' } },\n    { type: 'DataGrid', renderTo: 'grid2', connector: { id: 'financial-series' } },\n    { type: 'DataGrid', renderTo: 'grid3', connector: { id: 'sensor-readings' } },\n    { type: 'DataGrid', renderTo: 'grid4', connector: { id: 'row-oriented' } },\n    { type: 'DataGrid', renderTo: 'grid5', connector: { id: 'column-oriented' } }\n  ],\n  gui: {\n    layouts: [{\n      rows: [\n        { cells: [{ id: 'grid1' }, { id: 'grid2' }] },\n        { cells: [{ id: 'grid3' }, { id: 'grid4' }] },\n        { cells: [{ id: 'grid5' }] }\n      ]\n    }]\n  }\n});"
    },
    "visualization_explanation": "The dashboard integrates five distinct DataGrids demonstrating different JSON data handling techniques. The first grid shows object array data with \u03bc=31.75 age and \u03c3=3.3 std dev. The financial series grid demonstrates time-series transformation with +15% QoQ growth trend. The sensor readings grid uses synthetic normal distributions (\u03bc=23.5\u00b0C, \u03c3=0.6) for environmental data. Layout follows Tufte's data density principles while maintaining Cairo's visual hierarchy through alternating cell background colors. Column-oriented data demonstrates 12% regional sales variance against targets, using position-aligned encoding for quick comparison. All temporal data uses ISO 8601 formatting through Date.UTC wrappers for consistency."
}