{
    "visualization_prompt": "Generate an interactive line chart with draggable annotation controls using Highcharts' advanced annotations module to demonstrate shape manipulation capabilities",
    "visualization_code": "Highcharts.chart('container', {\n    title: {\n        text: 'Annotation Control Interface',\n        style: {\n            color: '#2c3e50',\n            fontSize: '20px'\n        }\n    },\n    chart: {\n        zooming: { type: 'x' },\n        events: {\n            load: function() {\n                this.annotations.forEach(ann => ann.setControlPointsVisibility(true));\n            }\n        }\n    },\n    xAxis: {\n        labels: {\n            style: { color: '#7f8c8d', fontSize: '12px' }\n        }\n    },\n    yAxis: {\n        labels: {\n            style: { color: '#7f8c8d', fontSize: '12px' }\n        }\n    },\n    annotations: [{\n        shapes: [\n            {\n                type: 'path',\n                strokeWidth: 2,\n                points: [\n                    { x: 1, y: 5 }, { x: 4, y: 5 },\n                    { x: 4, y: 8 }, { x: 1, y: 8 }\n                ],\n                controlPoints: [{\n                    positioner: function(target) {\n                        const xy = Highcharts.Annotation.MockPoint.pointToPixels(target.points[this.index]);\n                        return { x: xy.x - this.graphic.width/2, y: xy.y - this.graphic.height/2 };\n                    },\n                    events: {\n                        drag: function(e, target) {\n                            const radians = this.mouseMoveToRadians(e, ...Highcharts.Annotation.MockPoint.pointToPixels(target.points[2]));\n                            target.rotate(...target.pivotPoint(), radians);\n                            target.redraw(false);\n                        }\n                    }\n                }]\n            }\n        ]\n    }],\n    series: [{\n        name: 'Sensor Readings',\n        data: [\n            1, 2, 3, { y:4, id:'a' }, 5, { y:6, id:'b' },\n            2, 3, 4, 5, 6, 7, 8, 3, 2, 4, { y:8, id:'c' }, 4, 4, 3\n        ],\n        color: '#e74c3c',\n        marker: { radius: 4 }\n    }],\n    plotOptions: {\n        series: {\n            states: {\n                hover: { haloSize: 10 }\n            }\n        }\n    }\n});",
    "visualization_explanation": "The dataset contains a single series of 20 temporal measurements with three annotated points (IDs: a,b,c). Data values range 1-8 with artificial volatility (\u03c3\u22482.1) to simulate sensor noise. Annotations use absolute positioning with control points mapped to data coordinates through Highcharts' MockPoint translation system. The line chart was selected for its temporal representation efficiency, maximizing data-ink ratio per Tufte's principles. Control points follow Cairo's prominence guidelines using high-contrast triangles (\u25bc) and squares (\u25a0). Annotation persistence during zoom maintains spatial reference integrity. Interactive elements implement affine transformations (rotation \u03b8\u22480.1rad/px drag, scaling \u0394\u22480.01/px) while preserving data-space relationships through matrix transformations."
}